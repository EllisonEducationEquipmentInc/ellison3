%h3.dontdisplay== #{pluralize @search.total, @klass.to_s} Showing
.dontprint
  #catalog_breadcrumbs
  - if @breadcrumb_tags.present? && @breadcrumb_tags.reverse.detect {|e| e.visual_assets.present?}.present? # display tag's visual asset if any has visual asset. If we want to display the last selected filter tag's visual assets, change the conditional to: @breadcrumb_tags.last.try(:visual_assets).try(:present?)
    #tag_visual_assets= render @breadcrumb_tags.reverse.detect {|e| e.visual_assets.present?}.visual_assets.current
  .right= select_tag :sort, options_for_select(@sort_options, params[:sort]), :onchange => "location.hash = $.param.fragment( location.hash, {sort: this.value, page: 1}, 0 )"
  .toggleview.right.minilink= link_to "switch to list view", "#", :class => "toggle_view"
  %ul#catalogtabs
    %li= link_to "<span>#{pluralize @product_search.total, "Product"} #{outlet? || idea? ? 'Found' : 'Showing'}</span>".html_safe, "#", :id => "toggle_product", :class => "tab #{'in' if outlet? || idea?}active"
    %li= link_to "<span>#{pluralize @idea_search.total, idea_name.capitalize} #{idea? ? 'Showing' : 'Found'}</span>".html_safe, "#", :id => "toggle_idea", :class => "tab #{'in' unless idea?}active"
    - if is_sizzix_us?
      %li= link_to "<span>#{pluralize @outlet_search.total, "Outlet Item"} #{outlet? ? 'Showing' : 'Found'}</span>".html_safe, "#", :id => "toggle_outlet", :class => "tab #{'in' unless outlet?}active"
  - if is_er? && ecommerce_allowed? && !idea?
    = check_box_tag :select_all_products, "1", false, :onclick => "$('input.add_to_cart_checkbox').attr('checked', this.checked);toggle_add_checked_to_cart();"
    = label_tag :select_all_products, nil, :class => "minilink"
    %br
    #add_checked_to_cart.rounded{:style => "display:none;position:fixed;z-index:9999;padding:20px;left:50%;top:150px;background:white;border:1px solid gray;opacity:0.9;filter:alpha(opacity=90);cursor: move;"}
      #add_all_selected_to_cart.jqui_new
    :javascript
      $('#add_checked_to_cart').draggable();
      $('#add_all_selected_to_cart').click(function(){
        var values = $('.add_to_cart_checkbox:checked').map(function() {
          return this.value+':'+$('#quantity_'+this.value).val();
        }).get().join(',');
        $.ajax({url:"/carts/add_selected_to_cart?values="+values});
        _gaq.push(['_trackEvent', 'Cart', 'Add All Selected To Cart', values]);
        $('#add_checked_to_cart').hide();
        $('input.add_to_cart_checkbox').attr('checked', false);
      });
      function toggle_add_checked_to_cart(){
        if ($('.add_to_cart_checkbox:checked').length > 0){$('#add_checked_to_cart').show()} else {$('#add_checked_to_cart').hide()};
        $('#add_all_selected_to_cart').button({label: 'Add All '+$('.add_to_cart_checkbox:checked').length+' Selected To Cart'});
      }
.clear
.highlightable
  - if @search.total < 1
    %p
      %strong== We're sorry, we found 0 matching #{@klass}s
    - if !@search.correctly_spelled? && @search.spell_collation
      %p== Did you mean #{link_to_function @search.spell_collation, "location.hash = $.param.fragment( location.hash, {q: '#{@search.spell_collation}'}, 0 )"}?
  = render @products
.clear
.right.dontprint
  %strong Items Per Page:
  = select_tag :per_page, options_for_select([24,48,72,96], per_page)
= will_paginate @products, :class => 'pagination ajax dontprint'
:javascript
  $(document).ready(function(){
    $("#product_catalog").css({ opacity: 1.0 });
    $('.pagination.ajax a').click(function() {
      this.innerHTML='#{escape_javascript spinner}';
      location.hash = $.param.fragment( location.hash, {page: $.deparam.querystring(this.href)['page']}, 0 );
      return false;
    })
    $('#toggle_product').click(function() {
      location.hash = $.param.fragment( location.hash.replace(/\&?outlet=\d/,'').replace(/^#\&/, '#'), {ideas: 0, page: 1}, 0 );
      return false;
    });
    $('#toggle_idea').click(function() {
      location.hash = $.param.fragment( location.hash.replace(/\&?outlet=\d/,'').replace(/^#\&/, '#'), {ideas: 1, page: 1}, 0 );
      return false;
    });
    $('#toggle_outlet').click(function() {
      location.hash = $.param.fragment( location.hash, {outlet: 1, page: 1, ideas: 0}, 0 );
      return false;
    });
    $('#per_page').change(function() {
      location.hash = $.param.fragment( location.hash, {per_page: this.value, page: 1}, 0 );
      return false;
    })
    $("a.toggle_view").toggleView({initial_state: $.deparam.fragment()['view']})
    
    $('div.highlightable div.item-block:nth-child(16n)').after("<div class='page-break'> </div>");
  });