= form_for(@payment, :url => {:controller => :carts, :action => @quote ? "quote_2_order" : "proceed_checkout", :id => @quote, :secure => true}, :remote => true, :html => {:id => "proceed_checkout", :method => :post, :multipart => true}) do |f|
  = f.error_messages
  - if get_cart.allow_deferred?
    #deferred_options
      = radio_button_tag :deferred, 0, !@payment.deferred, :onclick => "$('#payment_deferred').val(this.value)"
      Single Payment
      %table
        %tr
          %th
            Payment Due 
            = l Date.today
        %tr
          %td
            %span#deferred_single_total_amount= render :partial => 'deferred_single_total_amount'
            %span (incl S&H +Tax)
      = radio_button_tag :deferred, 1, @payment.deferred, :onclick => "$('#payment_deferred').val(this.value)"
      Three Easy Payments
      %table
        %tr
          %th
            Payment 1 Due 
            = l Date.today
          - 1.upto(Payment::NUMBER_OF_PAYMENTS) do |i|
            %th
              Payment 
              = i+1 
              Due
              = l i.months.since, :format => :date
        %tr
          %td
            %span#deferred_first_payment= render :partial => 'deferred_first_payment'
            %span (incl S&H +Tax)
          - 1.upto(Payment::NUMBER_OF_PAYMENTS) do |i|
            %td= number_to_currency((gross_price(get_cart.sub_total)/(Payment::NUMBER_OF_PAYMENTS + 1.0)).round(2))
    = f.hidden_field :deferred
  - if purchase_order_allowed?
    .field
      = f.check_box :purchase_order, :onclick => "if (this.checked){$('#po_info').show();$('#cc_info').hide();$('#payment_attachment').rules('add',{required: true});$('#payment_purchase_order_number').rules('add',{required: true});$('.cc').each(function(){$(this).rules('remove')})} else {$('#po_info').hide();$('#cc_info').show();$('.cc').each(function(){$(this).rules('add',{required: true})});$('#payment_full_card_number').rules('add',{creditcard: true});$('#payment_card_security_code').rules('add',{cvv: true});$('#payment_attachment').rules('remove');$('#payment_purchase_order_number').rules('remove');}"
      = f.label :purchase_order, "Check if you would like to pay your order by Purchase Order."
    .field#po_info{:style => "display:none"}
      = f.label :purchase_order_number
      = f.text_field :purchase_order_number
      %br
      = f.label :attachment, "Upload Purchase Order: (doc, pdf)"
      %br
      = f.file_field :attachment
      = f.hidden_field :attachment_cache
  #cc_info
    - if get_user.token && get_user.token.current?
      %strong Credit Card on file:
      .field.credit_card
        = get_user.token.card_name
        = get_user.token.card_number
        = link_to "forget/use another one", forget_credit_card_path(:quote => @quote), :remote => true
        = f.hidden_field :use_saved_credit_card
    - else
      .left.field.credit_card
        = required_label f, :first_name, { :label => "First Name", :label_size => "autosize" }
        %br
        = f.text_field :first_name, :class => "cc"
      .left.field.credit_card
        = required_label f, :last_name, { :label => "Last Name", :label_size => "autosize" }
        %br
        = f.text_field :last_name, :class => "cc"
      .clear_left
      .field.credit_card
        .left
          = required_label f, :card_name, { :label => "Credit Card Type", :label_size => "autosize" }
          %br
          = select :payment, :card_name, Payment.cards, {:prompt => "--- card type ---"}, :class => "cc"
        .left
          = required_label f, :full_card_number, { :label => "Credit Card Number", :label_size => "autosize" }
          %br
          = text_field :payment, :full_card_number, :class => "cc"
        .left
          = required_label f, :card_security_code, { :label => "Credit Card Security Code", :label_size => "autosize" }
          %br
          = text_field :payment, :card_security_code, :size => 4, :class => "cc"
        .clear_left
        .field
          = required_label f, :card_expiration_month, { :label => "Expiration Date", :label_size => "autosize" }
          %br
          = select :payment, :card_expiration_month, Payment.months, { :prompt => "month" }, :class => "cc"
          = select :payment, :card_expiration_year, Payment.years, { :prompt => "year" }, :class => "cc"
        - if !is_us?
          .field
            You need to fill in the following fields
            %strong ONLY
            if the information is on your card.
          .field.credit_card
            = f.label :card_issue_month, "Card Start Date"
            = select :payment, :card_issue_month, Payment.months, { :include_blank => true }, :class => "cc"
            \/
            = select :payment, :card_issue_year, Payment.issue_years, { :include_blank => true }, :class => "cc"
          .field.credit_card
            = f.label :card_issue_number
            = f.text_field :card_issue_number, :size => 2, :maxlength => 2, :class => "cc"
        - if can_tokenize_payment?
          .field
            = f.check_box :save_credit_card
            = f.label :save_credit_card
      .clear_left
  - if can_use_previous_payment?
    .field
      = f.check_box :use_previous_orders_card, :onclick => "if (this.checked) {$('.credit_card').remove()} else {$(this).attr('disabled', true);$('#payment_submit').replaceWith('#{escape_javascript spinner}');$('#checkout_cc').load('/carts/use_previous_orders_card');}"
      = f.label :use_previous_orders_card, "Use same payment info that was used in order #"
      = link_to get_cart.order_reference, admin_order_path(get_cart.order_reference)
  .ui-accordion.ui-widget.ui-helper-reset.ui-accordion-icons
    %h4.ui-accordion-header.ui-helper-reset#order_comment
      %span.ui-icon.ui-icon-triangle-1-e
      = link_to 'Comments', "#"
    %div= text_area_tag :comments, nil, :style => "width:500px;height:100px;" 
  = f.submit "Place Order", :class => 'jqui_save'
  %br
  %br
  :javascript
    var button_label = "Place Order";
    $(document).ready(function() { 
        $(".jqui_save").button({icons: {primary: 'ui-icon-disk'}});
        //initialize_buttons();
        $('#payment_submit').button({disabled: true, label: 'please wait...'});
        order_comment();
        $('#proceed_checkout').validate(payment_validator_options);
    });
    
    $('#order_comment').toggle(function () {
      $("#payment_submit").css({top: "-44px"});
    }, function () {
      $("#payment_submit").css({top: "60px"});
    });