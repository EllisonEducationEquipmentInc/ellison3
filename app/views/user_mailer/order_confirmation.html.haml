%table{ :width => "100%", :border => "0", :cellspacing => "0", :cellpadding => "0" }
  %tr
    %td{ :colspan => "3"}
      %h1.primary-heading Thank you for your order!
  %tr
    %td.threecol.first
      %h3.secondary-heading Billing Address
      %p
        - if @order.payment.present?
          - unless @order.payment.company.blank?
            = @order.payment.company
            %br
          == #{@order.payment.first_name} #{@order.payment.last_name}
          %br
          = @order.payment.address1
          %br
          - unless @order.payment.address2.blank?
            = @order.payment.address2
            %br
          == #{@order.payment.city}, #{@order.payment.state} #{@order.payment.zip_code}
          %br
          = @order.payment.country
          %br
          = @order.payment.phone
    %td.threecol
      %h3.secondary-heading Shipping Address
      %p
        - unless @order.address.company.blank?
          = @order.address.company
          %br
        == #{@order.address.first_name} #{@order.address.last_name}
        %br
        = @order.address.address1
        %br
        - unless @order.address.address2.blank?
          = @order.address.address2
          %br
        == #{@order.address.city}, #{@order.address.state} #{@order.address.zip_code}
        %br
        = @order.address.country
        %br
        = @order.address.phone
    %td.threecol.last
      %h3.secondary-heading Order Details
      %strong Order Number:
      = @order.public_order_number
      %br
      %strong Customer Account:
      = @order.system == 'szus' ? 'SIZZIX.COM' : @order.user.erp
      %br
      %strong Web Customer:
      = @order.user.email
      %br
      %strong Order Date:
      = l @order.created_at, :format => :custom
      %br
      %strong Status:
      = @order.status
%table{ :width => "100%", :border => "0", :cellspacing => "0", :cellpadding => "0" }
  %tr
    %th{ :width => "60", :align => "left" } Item No.
    %th{ :align => "left" } Item Name
    %th{ :width => "40", :align => "center" } Qty
    %th{ :width => "55", :align => "right" } Price
    %th{ :width => "70", :align => "right" } Item Total
  - @order.order_items.each do |item|
    %tr{:class => cycle('odd', 'even')}
      %td{ :width => "60", :align => "left" }= item.item_num
      %td{ :align => "left" }= item.name
      %td{ :width => "40", :align => "center" }= item.quantity
      %td{ :width => "55", :align => "right" }= number_to_currency item.gross_price
      %td{ :width => "70", :align => "right" }= number_to_currency item.item_total
  %tr
    %td{ :colspan => "4", :align => "right" }
      %strong Subtotal
    %td{ :align => "right"}
      %strong= number_to_currency @order.gross_subtotal_amount
  %tr
    %td{ :colspan => "4", :align => "right" }== Shipping & Handling (#{@order.shipping_service.try :humanize})
    %td{ :align => "right"}= number_to_currency @order.gross_shipping_amount
  - if @order.cod?
    %tr
      %td{ :colspan => "4", :align => "right" } COD account:
      %td{ :align => "right"}
        = @order.cod_account_type
        = @order.cod_account
  - if @order.handling_amount > 0.0
    %tr
      %td{ :colspan => "4", :align => "right" } Shipping & Handling Surcharge
      %td{ :align => "right"}= number_to_currency @order.handling_amount
  %tr
    %td{ :colspan => "4", :align => "right" }== #{is_us? ? 'Sales Tax' : is_sizzix_uk? ? 'VAT (already included in Subtotal)' : 'Estimated Tax'}
    %td{ :align => "right"}= number_to_currency @order.tax_amount
  %tr
    %td{ :colspan => "4", :align => "right" }
      %strong TOTAL
    %td{ :align => "right"}
      %strong= number_to_currency @order.total_amount
  - if @order.total_discount.present? && @order.total_discount > 0.0
    %tr
      %td{ :colspan => "4", :align => "right" }
        %strong Total Savings:
      %td{ :align => "right"}
        %strong= number_to_currency @order.total_discount
  - if @order.payment.present?
    %tr
      %td{ :colspan => "4", :align => "left" }
        This order was charged to:
        %strong
          - if @order.payment.try(:purchase_order)
            %strong Purchase Order
            = @order.payment.purchase_order_number
          - else
            == #{@order.payment.card_name}, 
            == #{@order.payment.card_expiration_month}/#{@order.payment.card_expiration_year}
      %td{ :align => "right"}
    - if @order.payment.deferred
      %tr
        %td{ :colspan => "4", :align => "left" }
          %table{ :width => "100% "}
            %tr
              %th{ :align => "center" }
                Payment 1
                = l @order.payment.paid_at, :format => :date
              - 1.upto(Payment::NUMBER_OF_PAYMENTS) do |i|
                %th{ :align => "center" }
                  Payment 
                  = i+1 
                  = l @order.payment.paid_at.since(i.month), :format => :date
            %tr
              %td{ :align => "center" }
                = number_to_currency @order.payment.paid_amount
              - 1.upto(Payment::NUMBER_OF_PAYMENTS) do |i|
                %td{ :align => "center" }= number_to_currency(@order.payment.deferred_payment_amount)
        %td{ :align => "right"}
%table{ :width => "100%", :border => "0", :cellspacing => "0", :cellpadding => "0" }
  %tr
    %td
      %ol
        %li== Your credit card statement will reflect a charge from Sizzix/Ellison#{is_us? ? ' Lake Forest, CA' : nil}.
        %li Shipping errors and claims must be made within 10 days of receipt of goods.
        %li Merchandise CANNOT be returned without prior approval.
        %li Returns or exchanges subject to restocking fee.