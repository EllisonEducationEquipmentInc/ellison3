- I18n.locale = @order.locale
%div= link_to 'Back to Orders', myaccount_path('orders', :page => params[:page]), :class => 'jqui_back dontprint'
.contentwrap_medium
  %h3 Billing Address
  %p
    - if @order.payment.present?
      - unless @order.payment.company.blank?
        = @order.payment.company
        %br
      == #{@order.payment.first_name} #{@order.payment.last_name}
      %br
      = @order.payment.address1
      %br
      - unless @order.payment.address2.blank?
        = @order.payment.address2
        %br
      == #{@order.payment.city}, #{@order.payment.state} #{@order.payment.zip_code}
      %br
      = @order.payment.country
      %br
      = @order.payment.phone

.contentwrap_medium
  %h3 Shipping Address
  %p
    - unless @order.address.company.blank?
      = @order.address.company
      %br
    == #{@order.address.first_name} #{@order.address.last_name}
    %br
    = @order.address.address1
    %br
    - unless @order.address.address2.blank?
      = @order.address.address2
      %br
    == #{@order.address.city}, #{@order.address.state} #{@order.address.zip_code}
    %br
    = @order.address.country
    %br
    = @order.address.phone
    
.contentwrap_medium.last
  %h3 Order Details
  %strong Order Number:
  = @order.public_order_number
  %br
  - if @order.quote
    %strong== #{quote_name.capitalize} Reference Number:
    = @order.quote.id
    %br
  %strong Web Customer:
  = @order.user.email
  %br
  %strong Order Date:
  = l @order.created_at, :format => :custom
  %br
  %strong Status:
  = @order.public_status
  %br
.clear
%table
  %tr
    %th Item No.
    %th Item Name
    %th Quantity
    %th Item Price
    %th Item Subtotal
  - @order.order_items.each do |item|
    %tr{:class => cycle('odd', 'even')}
      %td= item.item_num
      %td= item.name
      %td= item.quantity
      %td= number_to_currency item.gross_price
      %td= number_to_currency item.item_total
- if @order.payment.present?
  %p.contentwrap_XL
    %strong
      - if @order.payment.try(:purchase_order)
        Purchase Order
        = @order.payment.purchase_order_number
        = link_to "download", @order.payment.attachment_url, :class => "link_download", :target => "_blank" if @order.payment.attachment
      - else
        This order was charged to: 
        = @order.payment.card_name
        == #{@order.payment.card_expiration_month}/#{@order.payment.card_expiration_year}
    %br
    %br
    = link_to "Print a copy of this order receipt.", "javascript:window.print()", :class => "link_print"
  - if @order.payment.deferred
    %br
    %br
    %table
      %tr
        %th
          Payment 1
          = l @order.payment.paid_at, :format => :date
        - 1.upto(Payment::NUMBER_OF_PAYMENTS) do |i|
          %th
            Payment 
            = i+1 
            = l @order.payment.paid_at.since(i.month), :format => :date
      %tr
        %td
          = number_to_currency @order.payment.paid_amount
        - 1.upto(Payment::NUMBER_OF_PAYMENTS) do |i|
          %td= number_to_currency(@order.payment.deferred_payment_amount)
%ul.plain.cart_summary.contentwrap_medium.last
  %li
    Subtotal:
    %span.right= number_to_currency @order.gross_subtotal_amount
  %li 
    == Shipping & Handling (#{@order.shipping_service.try :humanize}):
    %span.right= number_to_currency @order.gross_shipping_amount
  - if @order.cod?
    %li
      COD account:
      %span.right
        = @order.cod_account_type
        = @order.cod_account
  %li{:style => "display:#{@order.handling_amount > 0.0 ? 'block' : 'none'}"}
    Shipping & Handling Surcharge:
    %span.right= number_to_currency @order.handling_amount
  %li 
    == #{t :estimated_tax}:
    %span.right= number_to_currency @order.tax_amount
  %li#cart_total
    Total:
    %span#total_amount.amount.right= number_to_currency @order.total_amount
  - if @order.total_discount.present? && @order.total_discount > 0.0
    %li
      Total Savings:
      %span.amount.right= number_to_currency @order.total_discount
- I18n.locale = @current_locale