= form_for([:admin, @coupon], :html => {:multipart => true}) do |f|
  = f.error_messages
  .field
    = f.label :systems_enabled
    = system_enabled('coupon')
  .field
    = f.label :active
    %br
    = f.check_box :active
  .field
    = f.label :name
    %br
    = f.text_field :name
  .field
    = f.label "start_date_#{current_system}", "Start Date #{current_system.upcase}", :class => 'overrideable'
    %br
    = f.text_field "start_date_#{current_system}", :class => 'datetimepicker'
  .field
    = f.label "end_date_#{current_system}", "End Date #{current_system.upcase}", :class => 'overrideable'
    %br
    = f.text_field "end_date_#{current_system}", :class => 'datetimepicker'
  .field
    = f.label :level
    %br
    = f.select :level, Coupon::LEVELS.map {|e| [e.humanize, e]}
  .field
    = f.label :discount_type
    %br
    = f.select :discount_type, Coupon::DISCOUNT_TYPES.map {|e| [e.humanize, e]}
  .field
    = f.label :discount_value
    %br
    = f.text_field :discount_value
  .field
    = f.label :products
    = f.text_field :product_item_nums, :size => 50
    Enter item numbers seperated by commas  
  %h3 Conditions
  .field
    = f.label :cart_must_have
    = link_to_function "add", "$('#cart_must_have_list').append('#{escape_javascript render :partial => 'cart_must_have', :locals => {:condition => {:any => []}}}')"
    %ul#cart_must_have_list= render :partial => 'cart_must_have', :collection => @coupon.cart_must_have, :as => :condition
  .field
    = f.label :order_has_to_be
    %ul#order_has_to_be_list
      %li.ui-menu-item
        %strong Total weight:
        Over
        = text_field_tag "coupon[order_has_to_be][total_weight][over]", @coupon.order_has_to_be["total_weight"].try(:[], "over")
        Under
        = text_field_tag "coupon[order_has_to_be][total_weight][under]", @coupon.order_has_to_be["total_weight"].try(:[], "under")
      %li.ui-menu-item
        %strong Sub Total:
        Over
        = text_field_tag "coupon[order_has_to_be][sub_total][over]", @coupon.order_has_to_be["sub_total"].try(:[], "over")
        Under
        = text_field_tag "coupon[order_has_to_be][sub_total][under]", @coupon.order_has_to_be["sub_total"].try(:[], "under")
  .field
    = f.label :product_excluded_item_nums, "Products excluded from 'Order has to be' calculations above"
    %br
    = f.text_field :product_excluded_item_nums, :size => 50
  .field
    = f.label :description, :class => 'overrideable'
    %br
    = f.text_area :description, :class => 'wymeditor'
  .actions
    = f.submit :class => 'wymupdate jqui_save'
  :javascript
    $(function() {
    		$("#coupon_product_item_nums").autocomplete(auto_complete_options);
    		$("#coupon_product_excluded_item_nums").autocomplete(auto_complete_options);
    	});
    initialize_buttons();