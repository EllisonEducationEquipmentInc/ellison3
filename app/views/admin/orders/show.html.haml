%h2.left== Order - #{@order.id}
.breadcrumbs.right.dontprint= link_to 'list all orders', admin_orders_path, :class => "link_list-all-records"
.clear

- I18n.locale = @order.locale
.contentwrap_medium
  %h3 Billing Address
  - if @order.payment.present?
    %p
      - unless @order.payment.company.blank?
        = @order.payment.company
        %br
      == #{@order.payment.first_name} #{@order.payment.last_name}
      %br
      = @order.payment.address1
      %br
      - unless @order.payment.address2.blank?
        = @order.payment.address2
        %br
      == #{@order.payment.city}, #{@order.payment.state} #{@order.payment.zip_code}
      %br
      = @order.payment.country
      %br
      = @order.payment.phone
  - else
    .error No Billing Info Available
.contentwrap_medium
  %h3 Shipping Address
  %p
    -  unless @order.address.company.blank?
      = @order.address.company
      %br
    == #{@order.address.first_name} #{@order.address.last_name}
    %br
    = @order.address.address1
    %br
    - unless @order.address.address2.blank?
      = @order.address.address2
      %br
    == #{@order.address.city}, #{@order.address.state} #{@order.address.zip_code}
    %br
    = @order.address.country
    %br
    = @order.address.phone
.contentwrap_medium.last
  %h3 Details
  %strong System:
  = @order.system
  %br
  %strong Order ID:
  = @order.id
  %br
  %strong Order Number:
  = @order.public_order_number
  %br
  - if @order.quote
    %strong== #{quote_name} Reference Number:
    = link_to @order.quote.id, admin_quote_path(@order.quote)
    %br
  %strong Web Customer Number:
  = @order.user.id
  %br
  %strong Customer Account:
  = @order.user.email
  %br
  %strong Customer Current Tax exempt status:
  = @order.user.tax_exempt?
  %br
  %strong Order Date:
  = l @order.created_at, :format => :custom
  %br
  %strong Estimated Ship Date:
  %span#estimated_ship_date= l @order.estimated_ship_date, :format => :custom rescue ''
  %br
  %strong Status:
  %span#order_status= @order.status
  %br
  - if @order.tracking_number.present?
    %strong Tracking #:
    = link_to @order.tracking_number, @order.tracking_url, :target => '_blank'
    %br
  %strong Customer Rep:
  = @order.get_customer_rep.try :email
  - unless @order.order_reference.blank?
    %br
    %strong Order Reference ID:
    = link_to @order.order_reference, admin_order_path(@order.order_reference)
  %div{:class => @order.user.erp.blank? || @order.user.invoice_account.blank? ? 'error' : nil}
    %strong ERP ID:
    = @order.user.erp
    = link_to 'edit', edit_admin_user_path(@order.user)
    %br
    %strong Invoice Account:
    = @order.user.invoice_account
    = link_to 'edit', edit_admin_user_path(@order.user)
    %br
  #order_actions= render :partial => 'order_actions'
.clear
- if @order.can_be_paid?
  #make_payment{:style => "display:none"}
    #payment_errors.error{:style => "display:none"}
    %h3 Billing Info
    = form_for @order, :url => {:action => "make_payment"}, :html => {:id => 'make_payment_form', :method => :post, :multipart => true, 'data-type' => 'html'}, :remote => true do |f|
      = f.hidden_field :id
      = f.fields_for :payment, @payment do |payment_fields| 
        = render :partial => 'admin/virtual_terminal/address_form', :locals => {:f => payment_fields}
        .clear_left
        .field
          = payment_fields.check_box :purchase_order, :onclick => "if (this.checked){$('#po_info').show();$('#cc_info').hide();$('#order_payment_attachment').rules('add',{required: true});$('#order_payment_purchase_order_number').rules('add',{required: true});$('.cc').each(function(){$(this).rules('remove')})} else {$('#po_info').hide();$('#cc_info').show();$('.cc').each(function(){$(this).rules('add',{required: true})});$('#order_payment_full_card_number').rules('add',{creditcard: true});$('#order_payment_card_security_code').rules('add',{cvv: true});$('#order_payment_attachment').rules('remove');$('#order_payment_purchase_order_number').rules('remove');}"
          = payment_fields.label :purchase_order, "Check if you would like to pay your order by Purchase Order."
        .field#po_info{:style => "display:none"}
          = payment_fields.label :purchase_order_number
          = payment_fields.text_field :purchase_order_number
          %br
          = payment_fields.label :attachment, "Upload Purchase Order: (doc, pdf)"
          %br
          = payment_fields.file_field :attachment
          = payment_fields.hidden_field :attachment_cache
        #cc_info= render :partial => 'admin/virtual_terminal/cc_form', :locals => {:f => payment_fields}
      .actions
        = f.submit "Make Payment", :class => 'jqui_save', :disable_with => "please wait..."
      :javascript
        $(document).ready(function() { 
            $("#make_payment_form").validate({ 
                errorClass: "invalid",
                rules: { 
                    "#{f.object_name[/^\w+/]}[payment][first_name]": { 
                        required: true
                    }, 
                    "#{f.object_name[/^\w+/]}[payment][last_name]": { 
                        required: true
                    }, 
                    "#{f.object_name[/^\w+/]}[payment][address1]": { 
                        required: true, 
                    }, 
                    "#{f.object_name[/^\w+/]}[payment][city]": { 
                        required: true, 
                    },
                    "#{f.object_name[/^\w+/]}[payment][email]": { 
                        required: true, 
                    },
                    "#{f.object_name[/^\w+/]}[payment][card_name]": { 
                        required: true, 
                    },
                    "#{f.object_name[/^\w+/]}[payment][full_card_number]": { 
                        required: true, 
                    },
                    "#{f.object_name[/^\w+/]}[payment][card_security_code]": { 
                        required: true, 
                    },
                    "#{f.object_name[/^\w+/]}[payment][card_expiration_month]": { 
                        required: true, 
                    },
                    "#{f.object_name[/^\w+/]}[payment][card_expiration_year]": { 
                        required: true, 
                    },

                }, 
                success: function(label) { 
                    label.html(" ").addClass("checked"); 
                },
                submitHandler: function(form) {
                  $("##{f.object_name[/^\w+/]}_form").callRemote();
                },
              });
            }); 
%table
  %thead
    %tr
      - unless @order.status_frozen?
        %th
      %th Item #
      %th Item Name
      %th Quantity
      %th Item Price
      %th Item Subtotal
      %th Custom
      %th Coupon
      %th Campaign
      %th Upsell
  %tbody
    - @order.order_items.each do |item|
      %tr{:class => cycle('odd', 'even')}
        - unless @order.status_frozen?
          %td
            - if item.product.pre_order?(@order.system)
              Pre-order
            - elsif !item.product.available?(@order.system)
              Unavailable
            - elsif item.product.suspended?
              Retired
            - elsif item.product.out_of_stock?(@order.system)
              Out of stock
        %td= item.item_num
        %td= item.name
        %td= item.quantity
        %td= number_to_currency item.gross_price
        %td= number_to_currency item.item_total
        %td= item.custom_price
        %td= item.coupon_price
        %td= item.campaign_name
        %td= item.upsell
.contentwrap_XL &nbsp;
%ul.plain.cart_summary.contentwrap_medium.last{ :style => "margin-bottom: 10px" }
  %li
    %span.left Subtotal:
    %span.right= number_to_currency @order.gross_subtotal_amount
    .clear
  %li
    %span.left== Shipping & Handling (#{@order.shipping_service.try :humanize}):
    %span.right#shipping_amount= number_to_currency @order.gross_shipping_amount
    .clear
  - if @order.cod?
    %li.error
      %span.left COD account:
      %span.right
        = @order.cod_account_type
        = @order.cod_account
      .clear
  %li{:style => "display:#{@order.handling_amount > 0.0 ? 'block' : 'none'}"}
    %span.left Shipping & Handling Surcharge:
    %span.right= number_to_currency @order.handling_amount
    .clear
  %li
    %span.left== #{is_us? ? 'Sales Tax' : is_sizzix_uk? ? 'VAT (already included in Subtotal)' : 'Estimated Tax'}:
    %span.right#tax_amount= number_to_currency @order.tax_amount
    .clear
  %li#cart_total
    %span.left TOTAL:
    %span.right#total_amount.amount= number_to_currency @order.total_amount
    .clear
  - if @order.total_discount.present? && @order.total_discount > 0.0
    %li
      %span.left Total Savings:
      %span.amount.right= number_to_currency @order.total_discount
      .clear
  %li    
    - if @order.payment.present?
      - if @order.payment.try(:purchase_order)
        .error
          %strong Purchase Order
          = @order.payment.purchase_order_number
          = link_to "download", @order.payment.attachment_url, :class => "link_download", :target => "_blank" if @order.payment.attachment?
      - else
        This order was charged to:
        = @order.payment.card_name
        == #{@order.payment.card_expiration_month}/#{@order.payment.card_expiration_year}
    - else
      No Payment Info Available
%hr
- if @order.coupon
  .field
    %strong Coupon:
    = link_to @order.coupon_code || @order.coupon.codes.join(", "), admin_coupon_path(@order.coupon)
    = @order.coupon.name
    %br
    %strong Free shipping by coupon?
    = @order.free_shipping_by_coupon
- if @order.payment.present?
  - if @order.payment.deferred
    Three Easy Payments
    %table
      %tr
        %th
          Payment 1
          = l @order.payment.paid_at, :format => :date
        - 1.upto(Payment::NUMBER_OF_PAYMENTS) do |i|
          %th
            Payment 
            = i+1 
            = l @order.payment.paid_at.since(i.month), :format => :date
      %tr
        %td
          = number_to_currency @order.payment.paid_amount
        - 1.upto(Payment::NUMBER_OF_PAYMENTS) do |i|
          %td= number_to_currency(@order.payment.deferred_payment_amount)
    %br
    Deferred Payment!
    %br
    Subscription ID:
    = @order.payment.subscriptionid
  .field{:style=>"float:left; height:auto; width:932px;", :class => @order.payment.paid_amount && @order.payment.paid_amount < @order.total_amount ? 'error' : nil}
    %strong Paid Amount:
    = number_to_currency @order.payment.paid_amount rescue "N/A"
  .field
    %strong Paid At:
    = l @order.payment.paid_at, :format => :custom rescue ""
  .field
    %strong Merchant Reference Number:
    = @order.payment.vendor_tx_code
  .field
    %strong Transaction ID:
    = is_us? ? @order.payment.vpstx_id : @order.payment.tx_auth_no
  .field
    %strong Refunded Amount:
    = number_to_currency @order.payment.refunded_amount rescue "N/A"
  .field
    %strong Refunded At:
    = l @order.payment.refunded_at, :format => :custom rescue ""
- else
  .error No Payment Info Available
.field
  %strong Tax Transaction ID:
  %span#tax_transaction= @order.tax_transaction
.field
  %strong Tax Calculated at:
  %span#tax_calculated_at= l @order.tax_calculated_at, :format => :custom rescue ''
.field
  %strong Order Comments:
  = @order.comments
.field
  %strong Internal Comments:
  #internal_comment= @order.internal_comments
- I18n.locale = @current_locale
- if has_write_permissions?
  :javascript
    $("#internal_comment").editInPlace({
      url: "/admin/orders/update_internal_comment",
      params: "id=#{@order.id}",
      field_type: "textarea",
      textarea_rows: "15",
      textarea_cols: "35",
      show_buttons: true,
      saving_animation_color: "#ECF2F8"
    });
    $("#estimated_ship_date").editInPlace({
      url: "/admin/orders/update_estimated_ship_date",
      params: "id=#{@order.id}",
      show_buttons: true,
      value_required: true,
      saving_animation_color: "#ECF2F8"
    });
:javascript
  initialize_tables();