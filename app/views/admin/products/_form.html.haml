= form_for([:admin, @product], :html => {:multipart => true}) do |f|
  = f.error_messages

  %hr
  %h3.contentwrap_XXXL.last System Visibility
  .contentwrap_large
    .field
      = f.label :active, "This product is", :class => "autosize"
      active
      = f.radio_button(:active, true)
      disabled
      = f.radio_button(:active, false)
    .field
      = required_label f, :systems_enabled, { :label => "Enabled for", :label_size => "auto" }
      = system_enabled('product')
  .contentwrap_large.last
    .field
      = f.label "start_date_#{current_system}", "<span class='icon_datefield'>Start Date #{current_system.upcase}</span>".html_safe, :class => 'overrideable ui-corner-all', :style => 'width: 120px'
      = f.text_field "start_date_#{current_system}", :class => 'datetimepicker'
    .field
      = f.label "end_date_#{current_system}", "<span class='icon_datefield'>End Date #{current_system.upcase}</span>".html_safe, :class => 'overrideable ui-corner-all', :style => 'width: 120px'
      = f.text_field "end_date_#{current_system}", :class => 'datetimepicker'

  %hr
  %h3.contentwrap_XXXL.last Basic Information
  .field.contentwrap_XXXL.last
    = required_label f, :name, { :label => 'Product Name', :label_size => '111px'}
    = f.text_field :name, :size => 50, :style => "font-weight: bold;"
  .contentwrap_large
    .field
      = required_label f, :item_num, { :label => 'Product Number', :label_size => "111px" }
      = f.text_field :item_num, :size => 10
    .field
      = f.label :upc, "Product UPC", :class => "w111"
      = f.text_field :upc, :size => 20
    .field
      = f.label :item_type, "Product Type", :class => "w111"
      = f.select :item_type, Product::ITEM_TYPES
    .field
      = f.label :item_group, "Brand", :class => "w111"
      = f.select :item_group, Product::ITEM_GROUPS
    .field
      = f.label :discount_category_id, "Product Discount Category", :class => "autosize"
      %br
      = f.select :discount_category_id, DiscountCategory.active.cache.map {|e| [e.name, e.id]}, :prompt => "--select--"
  
  .contentwrap_large.last
    .field
      = f.label :minimum_quantity, "Minimum Quantity for Retailers", :class => "autosize"
      = f.text_field :minimum_quantity, :size => 5
    .field
      = f.label :tax_exempt, "Tax Exempt?", :class => "w121"
      yes
      = f.radio_button(:tax_exempt, true)
      no
      = f.radio_button(:tax_exempt, false)
    %hr
    .field
      = f.label :use_tabs, "Page Layout", :class => "w121"
      %span.icon_tabbed-view
        tabbed view
      = f.radio_button(:use_tabs, true)
      %span.icon_full-view
        full view
      = f.radio_button(:use_tabs, false)
    .field
      = f.label :video, "YouTube Video ID", :class => "link_youtube"
      = f.text_field :video
      %br
      %p.formhelp{ :style => "margin-left: 132px"} sample YouTube ID: ndspni2cVqg
    .field
      = f.label :instructions, "Instructions Path", :class => "icon_pdf-upload", :style => "width: 101px"
      = f.text_field :instructions
      %br
      %p.formhelp{ :style => "margin-left: 132px"} sample path: /images/pdf/instructions/<filename>.pdf
      
  .contentwrap_XXXL.last
    .field
      = f.label :description, :class => 'overrideable ui-corner-all'
      %br
      = f.text_area :description, :class => 'wymeditor'

  %hr
  %h3.contentwrap_XXXL.last Pricing & Availability
  %div{ :class => "contentwrap_#{ is_sizzix_us? ? 'medium' : 'large'}"}
    - currencies.each do |currency|
      .field
        .left
          = required_label f, "msrp_#{currency}", { :label => "MSRP #{currency.upcase}", :label_size => '147px' }
          %br
          %span{ :class => "icon_pricefield_#{currency}" }
            = f.text_field "msrp_#{currency}", :onkeyup => gross_prices?(currency) ? "update_gross($(this), '#{currency}', #{vat})" : nil, :size => 8
        - if gross_prices? currency
          .left
            = label_tag "msrp_#{currency}_gross", "MSRP #{currency.upcase} <span class='formhelp'>(includes VAT)</span>".html_safe, :class => "w147"
            %br
            %span{ :class => "icon_pricefield_#{currency}" }
              = text_field_tag "msrp_#{currency}_gross", nil, :onKeyUp => "update_net($(this), '#{currency}', #{vat})", :size => 8
            :javascript
              $(document).ready(function(){update_gross($('#product_msrp_#{currency}'), '#{currency}', #{vat})});
        .clear
      %hr{ :style => "width: 310px" }
    .field
      - currencies.each  do |currency|
        .left
          = f.label "wholesale_price_#{currency}", "Wholesale Price #{currency.upcase}", :class => "w147"
          %br
          %span{ :class => "icon_pricefield_#{currency}" }
            = f.text_field "wholesale_price_#{currency}", :size => 8
      .clear
  - if is_sizzix_us?
    .contentwrap_medium
      .field
        = f.label :outlet, "Sell on the Outlet?", :class => "autosize"
        yes
        = f.radio_button(:outlet, true, :onchange => "if (this.checked) {$('#outlet_price').show();$('#price_szus_usd').attr('disabled', false)}")
        no
        = f.radio_button(:outlet, false, :onchange => "if (this.checked) {$('#outlet_price').hide();$('#price_szus_usd').attr('disabled', true)}")
      .field#outlet_price{:style => "display:#{@product.outlet ? 'block' : 'none'}"}
        = f.label :price_szus_usd, "Outlet Price <span class='formhelp'>(szus usd)</span>".html_safe, :class => "autosize"
        %span.icon_pricefield_usd
          = f.text_field :price_szus_usd, :size => 8
  %div{ :class => "contentwrap_#{ is_sizzix_us? ? 'medium' : 'large'} last"}
    - WAREHOUSES.each do |warehouse|
      .field
        = f.label "quantity_#{warehouse}", "Quantity #{warehouse.upcase}", :class => "w70"
        = f.text_field "quantity_#{warehouse}", :size => 5
  %hr
  .contentwrap_large
    .field
      = f.label "orderable_#{current_system}", "Orderable/Salable on #{current_system.upcase}?", :class => 'overrideable ui-corner-all autosize'
      yes
      = f.radio_button("orderable_#{current_system}", true)
      no
      = f.radio_button("orderable_#{current_system}", false)
    .field
      = f.label "availability_message_#{current_system}", "Availability Message #{current_system.upcase}", :class => 'overrideable ui-corner-all autosize'
      %br
      = f.text_field "availability_message_#{current_system}", :size => 43
    .field
      = f.label :life_cycle, "Product Life Cycle", :class => "autosize"
      = f.select :life_cycle, Product::LIFE_CYCLES
  .contentwrap_large.last
    .field
      = f.label "distribution_life_cycle_#{current_system}", "Life Cycle Message #{current_system.upcase}", :class => 'overrideable ui-corner-all autosize'
      %br
      = f.text_field "distribution_life_cycle_#{current_system}"
    .field
      = f.label "distribution_life_cycle_ends_#{current_system}", "<span class='icon_datefield'>Life Cycle Message End Date #{current_system.upcase}</span>".html_safe, :class => 'overrideable ui-corner-all autosize'
      %br
      = f.text_field "distribution_life_cycle_ends_#{current_system}", :class => 'datetimepicker'
      
  %hr
  %h3.contentwrap_XXXL.last Shipping & Handling
  .contentwrap_large
    .field
      = f.label :weight, "Weight <em>(in pounds)</em>".html_safe, :class => "autosize"
      %br
      %span.icon_weightfield
        = f.text_field :weight, :size => 8
        lbs
    .field
      = f.label :weight_kgs, "Weight <em>(in kilograms)</em>".html_safe, :class => "autosize"
      %br
      %span.icon_weightfield
        = f.text_field :weight_kgs, :size => 8
        kg
    - currencies.each  do |currency|
      .field
        = f.label "handling_price_#{currency}", "Handling Price #{currency.upcase}", :class => "autosize"
        %br
        %span{ :class => "icon_pricefield_#{currency}" }
          = f.text_field "handling_price_#{currency}", :size => 8

  .contentwrap_large.last
    .field
      = f.label :"virtual_weight_#{current_system}", "Virtual Weight #{current_system.upcase}", :class => 'overrideable ui-corner-all autosize'
      %br
      %span.icon_weightfield
        = f.text_field :"virtual_weight_#{current_system}", :size => 8
    .field
      = f.label "virtual_weight_ends_#{current_system}", "<span class='icon_datefield'>Virtual Weight End Date #{current_system.upcase}</span>".html_safe, :class => 'overrideable ui-corner-all autosize'
      %br
      = f.text_field "virtual_weight_ends_#{current_system}", :class => 'datetimepicker'
    
  %hr
  %h3.contentwrap_XXXL.last Default Product Image
  .contentwrap_XXXL
    .field
      = image_tag(@product.image_url(:small)) if @product.image? 
      = f.file_field :image
      = f.hidden_field :image_cache
      %br
      = f.label :remove_image
      = f.check_box :remove_image

  %hr
  %h3.contentwrap_XXXL.last Tags, Ideas & Keywords
  .contentwrap_large
    %strong Tags
    - if @product.new_record?
      %p
        %em Please save this product first before assigning tags.
    - else
      #product_tags_section= render :partial => 'product_tags'
      .field
        = label_tag :product_tags_helper #, "<strong>Add A#{ @product.tags.count >= 1 ? 'nother' : nil } Tag</strong".html_safe
        = text_field_tag "product_tags_helper"
      :javascript
        $(document).ready(function(){
          $('.tag_pagination.ajax a').live('click', function() {$("#product_tags_section").css({ opacity: 0.3 });this.innerHTML='#{escape_javascript spinner}';$('#product_tags_section').load(this.href);return false;})
        });
        $("#product_tags_helper").autocomplete({
        	source: function(request, response) {
            $.ajax({
            	url: "/tags_autocomplete",
            	dataType: 'text json',
            	data: {term: request.term},
            	success: function( data ) {response(data)}
            });
        	},
        	search: function() {
        		if (this.value.length < 2) {
        			return false;
        		}
        	},
        	focus: function( event, ui ) {
          				$( "#product_tags_helper" ).val( ui.item.label );
          				return false;
          			},
        	select: function(event, ui) {
        	  this.value = '';
        	  $.ajax({url:'/admin/products/add_tag?tag_id='+ui.item.id+'&id=#{@product.id}', success: function(html) {$('#product_tags').append(html);$('#product_tags').find('.spinner').remove();}, beforeSend: function(){$('#product_tags').append('#{escape_javascript loader_bar}')}});
        		return false;
        	}});
  .contentwrap_large.last
    %strong
      Related Ideas
      %span.formhelp.tip_related-ideas (Ideas created using this product)
    - if @product.new_record?
      %p
        %em Please save this product first before assigning ideas.
    - else
      #product_ideas_section= render :partial => 'product_ideas'
      = label_tag :product_ideas_helper, "<strong>Add An#{ @product.ideas.count >= 1 ? 'other' : nil } Idea</strong>".html_safe
      = text_field_tag "product_ideas_helper"
      :javascript
        $(document).ready(function(){
          $('.idea_pagination.ajax a').live('click', function() {$("#product_ideas_section").css({ opacity: 0.3 });this.innerHTML='#{escape_javascript spinner}';$('#product_ideas_section').load(this.href);return false;})
        });
        $("#product_ideas_helper").autocomplete({
        	source: function(request, response) {
            $.ajax({
            	url: "/ideas_autocomplete",
            	dataType: 'text json',
            	data: {term: request.term},
            	success: function( data ) {response(data)}
            });
        	},
        	search: function() {
        		if (this.value.length < 2) {
        			return false;
        		}
        	},
        	focus: function( event, ui ) {
          				$( "#product_ideas_helper" ).val( ui.item.label );
          				return false;
          			},
        	select: function(event, ui) {
        	  this.value = '';
        	  $.ajax({url:'/admin/products/add_idea?idea_id='+ui.item.id+'&id=#{@product.id}', success: function(html){$('#product_ideas').append(html);$('#product_ideas').find('.spinner').remove();}, beforeSend: function(){$('#product_ideas').append('#{escape_javascript loader_bar}')}});
        		return false;
        	}});
    %br
    %br
    .field
      = f.label :related_product_tag, "Related Product Tag ID", :class => "autosize"
      %br
      = f.text_field :related_product_tag
      %br
      %span#related_product_tag_name= @product.related_product_tag_name
      %p.formhelp
        If this field is left blank, default tag logic
        %br
        will dictate which related products are displayed.
      :javascript
        $('#product_related_product_tag').autocomplete({
        	source: function(request, response) {
          	$.ajax({
            	url: "/tags_autocomplete",
            	dataType: 'text json',
            	data: {term: request.term},
            	success: function( data ) {response(data)}
            });
        	},
        	search: function() {
        		if (this.value.length < 2) {
        			return false;
        		}
        	},
        	focus: function( event, ui ) {
          				return false;
          			},
        	select: function(event, ui) {
        	  $("#related_product_tag_name").html( ui.item.label + '<br />' );
            $(this).val( ui.item.id );
            return false;
          }});
    =# products_helper_tag('product[related_product_item_nums]', @product.related_product_item_nums, :label => 'Related Products (item_num only)')
  .contentwrap_XXXL.last
    .field
      = f.label :keywords, "Meta Tag Keywords", :class => "autosize"
      %br
      = f.text_area :keywords, :rows => 3, :cols => 90
  
  .clear
  .actions
    = f.submit :class => 'wymupdate jqui_save'

  :javascript
    $(function() {
      var avail_messages = [{value: '<a href="/contact">Call now to place your order</a>', label: "Call now to place your order"}, {value: '<a href="/stores">Check Your Local Craft Store</a>', label: 'Check Your Local Craft Store'}, {label: 'Available at your Local Retailer', value: '<a href="/stores">Available at your Local Retailer</a>'}, {value: '<a href="http://www.stampinup.com/ECWeb/CategoryPage.aspx?categoryID=180" target="_blank">Stampin\' Up! Exclusive Product</a>', label: 'Stampin\' Up! Exclusive Product'}];
      $('#product_availability_message_#{current_system}').autocomplete({source: avail_messages});
      $('#product_distribution_life_cycle_#{current_system}').autocomplete({source: ["New", "Sale", "Discountinued", "Clearance", "Coming Soon"]});
    });
    $('.overrideable').CreateBubblePopup({
      position: 'top',
      align: 'center',
      distance: '50px',
      tail: {
        align: 'middle',
        hidden: false
      },
      selectable: true,
      innerHtml: 'this property may be overwritten for #{system_name}',
      innerHtmlStyle: {
        color: '#333333',
        'text-align': 'center'
      },
      themeName: 'azure',
      themePath: '/images/ui-plugins/bubblepopup'
    });
    $('.tip_related-ideas').CreateBubblePopup({
      position: 'top',
      align: 'center',
      distance: '50px',
      tail: {
        align: 'middle',
        hidden: false
      },
      selectable: true,
      innerHtml: 'All ideas specified here will list this product as Products Used.',
      innerHtmlStyle: {
        color: '#333333',
        'text-align': 'center',
        width: '125px'
      },
      themeName: 'azure',
      themePath: '/images/ui-plugins/bubblepopup'
    });
