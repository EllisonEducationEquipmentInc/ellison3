%h2 Virtual Terminal
#virtual_terminal_message.notice{:style => "display:none"}
#virtual_terminal.accordion-block
  %h3= link_to "CCH Calculate", "#cch_calculate"
  #cch_calculate
    = form_for @order, :url => {:action => "cch_calculate"}, :html => {:id => "cch_calculate_form", 'data-type' => 'html'}, :as => :cch_calculate, :remote => true do |f|
      .column_50
        = render :partial => 'order', :locals => {:f => f}
        .field
          = f.label :tax_exempt, "Tax Exempt?", :style => "width: 135px"
          yes
          = f.radio_button(:tax_exempt, true, :onclick => "if (this.checked) {$('label[for=cch_calculate_tax_exempt_number] span').addClass('required');$('##{f.object_name[/^\w+/]}_tax_exempt_number').rules('add', {required: true});}")
          no
          = f.radio_button(:tax_exempt, false, :onclick => "if (this.checked) {$('label[for=cch_calculate_tax_exempt_number] span').removeClass('required');$('##{f.object_name[/^\w+/]}_tax_exempt_number').rules('remove');}")
        .field
          = f.label :tax_exempt_number, "<span class=''>Tax Exempt Number</span>".html_safe, :style => "width: 135px"
          = f.text_field :tax_exempt_number
        .field
          = label_tag :order_number, "Order Number", :style => "width: 135px"
          = text_field_tag :order_number, params[:order_number]
      .column_50
        = f.fields_for @order.address do |address_fields|
          = render :partial => 'address_form', :locals => {:f => address_fields}
      .clear
      .actions.right
        = f.submit "CCH Calculate", :class => 'jqui_save', :disable_with => "please wait..."
      :javascript
        $(document).ready(function() {
          $("##{f.object_name[/^\w+/]}_form").validate({
            errorClass: "invalid",
            rules: {
              "#{f.object_name[/^\w+/]}[address][zip_code]": {
                  required: true
              }, 
              "#{f.object_name[/^\w+/]}[address][state]": {
                  required: #{is_us? ? 'true' : 'false'}
              }, 
              "#{f.object_name[/^\w+/]}[address][address1]": {
                  required: true
              }, 
              "#{f.object_name[/^\w+/]}[address][city]": {
                  required: true
              },
             "#{f.object_name[/^\w+/]}[subtotal_amount]": {
                  required: true
              },
              "#{f.object_name[/^\w+/]}[shipping_amount]": {
                  required: true
              },
            }, 
            success: function(label) {
              label.html(" ").addClass("checked");
            },
            submitHandler: function(form) {
              $("##{f.object_name[/^\w+/]}_form").callRemote();
            }
          });
          $("##{f.object_name[/^\w+/]}_form").bind('ajax:success', function(e, data) {$('#virtual_terminal_message').show().html(data)}); 
          $("label[for=cch_calculate_address_first_name] span").removeClass("required");
          $("label[for=cch_calculate_address_last_name] span").removeClass("required");
          $("label[for=cch_calculate_address_email] span").removeClass("required");
        });
  %h3= link_to "CCH Commit", "#cch_commit"
  #cch_commit
    = form_tag url_for(:action => "cch_commit"), :id => "cch_commit_form", 'data-type' => 'html', :remote => true do
      .field.left
        = label_tag :cch_commit_tax_transaction_id, "<span class='required'>Tax Transaction ID</span>".html_safe, :class => "autosize"
        = text_field_tag :cch_commit_tax_transaction_id, params[:tax_transaction]
      .actions.right
        = submit_tag "CCH Commit", :class => 'jqui_save', :disable_with => "please wait..."
    :javascript
      $(document).ready(function() { 
          $("#cch_commit_form").validate({ 
              errorClass: "invalid",
              rules: { 
                  "cch_commit_tax_transaction_id": { 
                      required: true,
                      rangelength: [16, 17]
                  }
              }, 
              success: function(label) { 
                  label.html(" ").addClass("checked"); 
              },
              submitHandler: function(form) {
                $("#cch_commit_form").callRemote();
              }
          });
          $("#cch_commit_form").bind('ajax:success', function(e, data) {$('#virtual_terminal_message').show().html(data)}); 
      });
  %h3= link_to "CCH Return", "#cch_return"
  #cch_return
    = form_for @order, :url => {:action => "cch_return"}, :html => {:id => "cch_return_form", 'data-type' => 'html'}, :as => :cch_return, :remote => true do |f|
      .field
        = required_label f, :tax_transaction, { :label => "Tax Transaction ID", :label_size => "135px"}
        = f.text_field :tax_transaction
      = render :partial => 'order', :locals => {:f => f}
      .actions.right
        = submit_tag "CCH Return", :class => 'jqui_save', :disable_with => "please wait..."
      :javascript
        $(document).ready(function() { 
            $("#cch_return_form").validate({ 
                errorClass: "invalid",
                rules: { 
                  "#{f.object_name[/^\w+/]}[subtotal_amount]": { 
                    required: true,
                    greaterThanZero : true
                  },
                  "#{f.object_name[/^\w+/]}[shipping_amount]": { 
                    required: true
                  },
                  "#{f.object_name[/^\w+/]}[tax_transaction]": { 
                    required: true,
                    rangelength: [16, 17]
                  }
                }, 
                success: function(label) { 
                    label.html(" ").addClass("checked"); 
                },
                submitHandler: function(form) {
                  $("#cch_return_form").callRemote();
                }
            });
            $("#cch_return_form").bind('ajax:success', function(e, data) {$('#virtual_terminal_message').show().html(data)}); 
        });
  %h3= link_to "Credit Card Purchase/Authorize", "#cc_purchase"
  #cc_purchase
    = form_for @order, :url => {:action => "cc_purchase"}, :html => {:id => "cc_purchase_form", 'data-type' => 'html'}, :as => :cc_purchase, :remote => true do |f|
      .left.field
        = label_tag :purchase_system, "System", :class => "autosize"
        = select_tag :purchase_system, options_for_select(ELLISON_SYSTEMS, params[:site] || current_system), :style => "margin-right: 18px"
      .left.field
        = label_tag :purchase_transaction_type, "Transaction type"
        = select_tag :purchase_transaction_type, options_for_select(%w(purchase authorize), params[:transaction_type]), :style => "margin-right: 18px"
      .left.field
        = label_tag :purchase_total_amount, "<span class ='required'>Total Amount</span>".html_safe, :class => "autosize"
        %span{ :class => "icon_pricefield_#{current_currency}" }
          = text_field_tag :purchase_total_amount, params[:total_amount], :size => 6, :style => "margin-right: 18px"
      .left.field
        = label_tag :purchase_order_id, "<span class ='required'>Order ID</span>".html_safe, :class => "autosize"
        = text_field_tag :purchase_order_id, params[:order_id] || params[:order_number]
      - if is_er?
        .left.field
          = label_tag :erp_id, "Axapta ID", :class => "autosize"
          = text_field_tag :erp_id, params[:erp_id]
          :javascript
            $('#erp_id').change(function() {
              $.ajax({url:"/admin/virtual_terminal/get_account?erp_id="+this.value});
            });
      .clear
      %hr
      = f.fields_for @order.payment do |payment_fields| 
        .column_50
          = render :partial => 'address_form', :locals => {:f => payment_fields}
        .column_50
          = render :partial => 'cc_form', :locals => {:f => payment_fields}
      .clear
      .actions.right
        = f.submit "Charge CC", :class => 'jqui_save', :disable_with => "please wait..."
      :javascript
        $(document).ready(function() { 
            $("##{f.object_name[/^\w+/]}_form").validate({ 
                errorClass: "invalid",
                rules: { 
                    "#{f.object_name[/^\w+/]}[payment][first_name]": { 
                        required: function(){return $('#cc_purchase_payment_subscriptionid').val() == ''}
                    }, 
                    "#{f.object_name[/^\w+/]}[payment][last_name]": { 
                        required: function(){return $('#cc_purchase_payment_subscriptionid').val() == ''}
                    }, 
                    "#{f.object_name[/^\w+/]}[payment][address1]": { 
                        required: function(){return $('#cc_purchase_payment_subscriptionid').val() == ''}, 
                    }, 
                    "#{f.object_name[/^\w+/]}[payment][city]": { 
                        required: function(){return $('#cc_purchase_payment_subscriptionid').val() == ''}, 
                    },
                    "#{f.object_name[/^\w+/]}[payment][state]": {
                        required: function(){return $('#cc_purchase_payment_subscriptionid').val() == ''}
                    }, 
                    "#{f.object_name[/^\w+/]}[payment][zip_code]": {
                        required: function(){return $('#cc_purchase_payment_subscriptionid').val() == ''}
                    }, 
                    "#{f.object_name[/^\w+/]}[payment][email]": { 
                        required: function(){return $('#cc_purchase_payment_subscriptionid').val() == ''}, 
                    },
                    "#{f.object_name[/^\w+/]}[payment][card_name]": { 
                        required: function(){return $('#cc_purchase_payment_subscriptionid').val() == ''}, 
                    },
                    "#{f.object_name[/^\w+/]}[payment][full_card_number]": { 
                        required: function(){return $('#cc_purchase_payment_subscriptionid').val() == ''}, 
                    },
                    "#{f.object_name[/^\w+/]}[payment][card_security_code]": { 
                        required: function(){return $('#cc_purchase_payment_subscriptionid').val() == ''}, 
                    },
                    "#{f.object_name[/^\w+/]}[payment][card_expiration_month]": { 
                        required: function(){return $('#cc_purchase_payment_subscriptionid').val() == ''}, 
                    },
                    "#{f.object_name[/^\w+/]}[payment][card_expiration_year]": { 
                        required: function(){return $('#cc_purchase_payment_subscriptionid').val() == ''}, 
                    },
                   "purchase_total_amount": { 
                        required: true, 
                    },
                    "purchase_order_id": { 
                        required: true, 
                    },
                    "purchase_transaction_type": { 
                        required: true, 
                    },
                    
                }, 
                success: function(label) { 
                    label.html(" ").addClass("checked"); 
                },
                submitHandler: function(form) {
                  $("##{f.object_name[/^\w+/]}_form").callRemote();
                },
            }); 
            $("##{f.object_name[/^\w+/]}_form").bind('ajax:success', function(e, data) {$('#virtual_terminal_message').show().html(data)}); 
        });
  %h3= link_to "Credit Card Capture", "#cc_capture"
  #cc_capture
    = form_tag url_for(:action => "cc_capture"), :id => "cc_capture_form", 'data-type' => 'html', :remote => true do
      .field
        = label_tag :cc_capture_system, "System"
        = select_tag :cc_capture_system, options_for_select(ELLISON_SYSTEMS, params[:site] || current_system)
      .field
        = label_tag :cc_capture_total_amount, "<span class='required'>Amount</span>".html_safe
        = text_field_tag :cc_capture_total_amount, params[:total_amount]
      .field
        = label_tag :authorization, "<span class='required'>Authorization</span>".html_safe
        = text_area_tag :authorization, params[:authorization], :cols => 50, :rows => 10
      .clear
      .actions.right
        = submit_tag "CC Capture", :class => 'jqui_save', :disable_with => "please wait..."
    :javascript
      $(document).ready(function() { 
          $("#cc_capture_form").validate({ 
              errorClass: "invalid",
              rules: { 
                  "cc_capture_total_amount": { 
                      required: true,
                  }, 
                  "authorization": { 
                      required: true,
                  },
              }, 
              success: function(label) { 
                  label.html(" ").addClass("checked"); 
              },
              submitHandler: function(form) {
                $("#cc_capture_form").callRemote();
              },
          });
          $("#cc_capture_form").bind('ajax:success', function(e, data) {$('#virtual_terminal_message').show().html(data)}); 
      });
  %h3= link_to "Credit Card Refund", "#cc_refund"
  #cc_refund
    = form_tag url_for(:action => "cc_refund"), :id => "cc_refund_form", 'data-type' => 'html', :remote => true do
      .field
        = label_tag :cc_refund_system, "System"
        = select_tag :cc_refund_system, options_for_select(ELLISON_SYSTEMS, params[:site] || current_system)
      .field
        = label_tag :amount_to_refund, "<span class='required'>Amount</span>".html_safe
        = text_field_tag :amount_to_refund, params[:amount_to_refund]
      .field
        = label_tag :refund_authorization, "<span class='required'>Refund Authorization</span>".html_safe
        = text_area_tag :refund_authorization, params[:refund_authorization], :cols => 50, :rows => 10
      .clear
      .actions.right
        = submit_tag "CC Refund", :class => 'jqui_save', :disable_with => "please wait..."
    :javascript
      $(document).ready(function() { 
          $("#cc_refund_form").validate({ 
              errorClass: "invalid",
              rules: { 
                  "amount_to_refund": { 
                      required: true,
                  }, 
                  "refund_authorization": { 
                      required: true,
                  },
              }, 
              success: function(label) { 
                  label.html(" ").addClass("checked"); 
              },
              submitHandler: function(form) {
                $("#cc_refund_form").callRemote();
              },
          });
          $("#cc_refund_form").bind('ajax:success', function(e, data) {$('#virtual_terminal_message').show().html(data)}); 
      });
  %h3= link_to "Shipping Rate Calculator", "#shipping_rate_calculator"
  #shipping_rate_calculator
    = form_for @order, :url => {:action => "shipping_rate_calculator"}, :html => {:id => "shipping_rate_calculator_form", 'data-type' => 'html'}, :as => :shipping_rate, :remote => true do |f|
      .column_50
        .field
          = label_tag :service, nil, :style => "width: 118px"
          = select_tag :service, options_for_select(["FEDEX", "SAIA", "WEB"] , params[:service]), :onchange => "update_service(this.value)"
          - unless is_er?
            :javascript
              function update_service(service) {
                if (service == 'SAIA') {
                  $('.saia_help').show()
                } else {
                  $('.saia_help').hide()
                }
                if (service == 'WEB') {
                  $('label[for=shipping_rate_weight] span').removeClass('required');
                  $('#weight').removeClass('invalid');
                  $('label[for=weight]').hide();
                  $('#weight').rules('remove');
                } else {
                  $('label[for=shipping_rate_weight] span').addClass('required');
                  $('#weight').rules('add', {required: true});
                }
              };
          - else
            :javascript
              function update_service(service) {
                if (service == 'SAIA') {
                  $('.saia_help').show()
                } else {
                  $('.saia_help').hide()
                }
              };

        .field
          = label_tag :request_type, nil, :style => "width: 118px"
          = select_tag :request_type, options_for_select(["ACCOUNT", "LIST"])
        .field
          = required_label f, :weight
          %span.icon_weightfield
            = text_field_tag :weight, params[:weight], :size => 8
          %p.saia_help
            == Do <strong><em>NOT</em></strong> enter weight in decimal format!
            %br
            SAIA will not accept weight in decimals.
        .field
          = f.label :subtotal_amount
          %span{:class => "icon_pricefield_#{current_currency}"}
            = f.text_field :subtotal_amount, :size => 8
        %hr
        .field
          = label_tag :package_count, nil, :style => "width: 118px"
          = select_tag :package_count, options_for_select([1,2,3,4,5,6,7,8,9,10], 1)
        .field
          = label_tag :packaging_type, nil, :style => "width: 118px"
          = select_tag :packaging_type, options_for_select(Shippinglogic::FedEx::Enumerations::PACKAGE_TYPES.map {|e| [e.humanize, e]}, "YOUR_PACKAGING"), :onchange => "if (this.value == 'YOUR_PACKAGING') {$('.your_packaging').show()} else {$('.your_packaging').hide()}"
        .field.your_packaging
          = label_tag :package_length, nil, :style => "width: 118px"
          = text_field_tag :package_length, 12, :size => 8
        .field.your_packaging
          = label_tag :package_height, nil, :style => "width: 118px"
          = text_field_tag :package_height, 12, :size => 8
        .field.your_packaging
          = label_tag :package_width, nil, :style => "width: 118px"
          = text_field_tag :package_width, 12, :size => 8
      .column_50
        = f.fields_for @order.address do |address_fields|
          = render :partial => 'address_form', :locals => {:f => address_fields}
      .clear
      .actions.right
        = submit_tag "Get Shipping Rate", :class => 'jqui_save', :disable_with => "please wait..."
      :javascript
        $(document).ready(function() { 
            $("#shipping_rate_calculator_form").validate({ 
                errorClass: "invalid",
                rules: {
                    "weight": { 
                        required: true,
                    }, 
                    "#{f.object_name[/^\w+/]}[address][zip_code]": { 
                        required: true
                    }, 
                    "#{f.object_name[/^\w+/]}[address][state]": { 
                        required: #{is_us? ? 'true' : 'false'}
                    }, 
                    "#{f.object_name[/^\w+/]}[address][address1]": { 
                        required: true, 
                    }, 
                    "#{f.object_name[/^\w+/]}[address][city]": { 
                        required: true, 
                    },
                }, 
                success: function(label) { 
                    label.html(" ").addClass("checked"); 
                },
                submitHandler: function(form) {
                  $("#shipping_rate_calculator_form").callRemote();
                },
            });
            $("#shipping_rate_calculator_form").bind('ajax:success', function(e, data) {$('#virtual_terminal_message').show().html(data)});
            $("label[for=shipping_rate_address_first_name] span").removeClass("required");
            $("label[for=shipping_rate_address_last_name] span").removeClass("required");
            $("label[for=shipping_rate_address_email] span").removeClass("required");
        });
:javascript
  $( "#virtual_terminal" ).accordion({ navigation: true, autoHeight: false  });
  $('#cch_calculate_address_country').trigger('change');
  $('#shipping_rate_address_country').trigger('change');
  