- child_index = f.object_name.match(/\[([0-9a-f]+)\]$/).try(:[], 1) || f.options[:child_index]
%div{:id => "visual_asset_#{f.object.new_record? ? child_index : f.object.id}", :class => "visual_asset_#{'child_' if f.object.is_child?}#{child_index} #{'child_' if f.object.is_child?}visual_asset #{" ui-widget-#{ is_sizzix_us? ? 'header' : 'content'} ui-widget" unless f.object.is_child?} ui-corner-all"}
  .va_title
    - if f.object.new_record?
      .right= link_to_function "x", "$(this).parents('.#{'child_' if f.object.is_child?}visual_asset').remove()", :class => "va_remove"
    = link_to "-", "#", :class => "va_collapse va_close"
    - if f.object.new_record?
      %h2 &nbsp;
    -# important: h2 is the sort handler for parent VA's, h3 for children
    - if f.object.is_child?
      %h3= f.object.name
    - else
      %h2= f.object.name
  %hr
  = f.error_messages
  - if f.object.is_child?
    .field
      = f.label :display_order
      = f.text_field :display_order, :id => "display_order_#{f.object.new_record? ? child_index : f.object.id}"
  .field
    = f.label :systems_enabled
    - ELLISON_SYSTEMS.each do |sys|
      = hidden_field_tag("#{f.object_name}[systems_enabled][]", sys) if f.object.systems_enabled.try(:include?, sys) && !has_write_permissions?(sys)
      = check_box_tag("#{f.object_name}[systems_enabled][]", sys, f.object.systems_enabled.try(:include?, sys), :disabled => !has_write_permissions?(sys))
      %span{:class => sys == current_system ? "current_system" : nil}= sys
  .field
    = f.label :active
    = f.check_box :active
    = f.label :_destroy, "Destroy this visual asset"
    = f.check_box :_destroy
  .field
    = required_field f.label(:name, "Name/Label")
    %br
    = f.text_field :name, :onchange => "$(this).closest('.#{'child_' if f.object.is_child?}visual_asset').children('h#{f.object.is_child? ? 3 : 2}').text(this.value)"
  .field
    = f.label "start_date"
    %br
    = f.text_field "start_date", :class => 'datetimepicker'
  .field
    = f.label "end_date"
    %br
    = f.text_field "end_date", :class => 'datetimepicker'
  .field
    = f.label :recurring
    = f.check_box :recurring, :onclick => "if (this.checked) {$('#visual_asset_#{f.object.new_record? ? child_index : f.object.id} .recurring').show()} else {$('#visual_asset_#{f.object.new_record? ? child_index : f.object.id} .recurring').hide()}"
  .field.recurring{:style => "display:#{f.object.recurring ? 'block' : 'none'}"}
    - Date::DAYNAMES.each do |day|
      = f.check_box :"#{day.downcase}"
      = day
  .field
    = f.label :short_desc
    %br
    = f.text_field :short_desc
  .field
    = f.label :must_own
    %br
    = select_tag "#{f.object_name}[must_own][]", options_for_select(MACHINES.map {|k,v| [v,k]}, f.object.must_own), :multiple => true
  .field
    = f.label :asset_type
    %br
    = f.select :asset_type, f.object.asset_types_list, {}, :onchange => "$('#visual_asset_#{f.object.new_record? ? child_index : f.object.id} .type_specific').hide();$('#visual_asset_#{f.object.new_record? ? child_index : f.object.id} .'+this.value).show();", :class => "#{'child_' if f.object.is_child?}visual_asset_asset_type_#{child_index} visual_asset_type"
  .field.type_specific.catalog_search
    = f.label :search_query, "Complete search query after #. ex: outlet=1&page=1&ideas=0&facets=category~shape-cutting&sort=start_date_szus%3Adesc"
    %br
    = f.text_field :search_query, :size => 100
  .field.type_specific.catalog_search
    = f.label :item_limit
    %br
    = f.text_field :item_limit
  .field.type_specific.freeform.billboard.image_with_text
    = f.label :content
    %br
    = f.text_area :content, :class => 'wymeditor'
  .field.type_specific.image.billboard.gallery.image_with_text
    = required_field(f.label :image)
    = image_tag(f.object.image_url) if f.object.image? 
    = f.file_field :image
    = f.hidden_field :image_cache
    %br
    = f.label :remove_image
    = f.check_box :remove_image
  .field.type_specific.billboard
    = f.label :wide
    = f.check_box :wide
  .field.type_specific.image.billboard.gallery.image_with_text
    = f.label :link
    %br
    = f.text_field :link
  = products_helper_tag "#{f.object_name}[product_item_nums]", f.object.product_item_nums, :label => "Products (item nums only)", :class => "type_specific products"
  = ideas_helper_tag "#{f.object_name}[idea_idea_nums]", f.object.idea_idea_nums, :label => "Ideas (idea nums only)", :class => "type_specific ideas"
  .field.type_specific.galleries.billboards{:id => "child_va_sortable_#{f.object.new_record? ? child_index : f.object.id}"}
    - unless f.object.is_child?
      = f.fields_for :child_visual_assets, f.object.child_visual_assets.sort {|x,y| x.display_order <=> y.display_order} do |child_visual_asset_fields|
        = render 'admin/visual_assets/visual_asset', :f => child_visual_asset_fields
      = link_to_add_fields "Add Child Visual Asset", f, :child_visual_assets, true
      :javascript
        $('#child_va_sortable_#{f.object.new_record? ? child_index : f.object.id}').sortable({handle: 'h3', tolerance: 'pointer', start: function(event, ui) {$('.child_visual_asset').css({height:"25px",overflow:"hidden"})}, stop: function(event, ui) {$('.child_visual_asset').css({height:"auto"})}, update: function(event, ui) {
          $('#child_va_sortable_#{f.object.new_record? ? child_index : f.object.id} > div').each(function(index) {
            $('#'+this.id.replace('visual_asset', 'display_order')).val(index);
          });
          
        }});
:javascript
  $(function (){  
    $(".wymeditor:visible").wymeditor({
      stylesheet: '/stylesheets/wymeditor/styles.css',
      logoHtml: ''
    });
    $('#visual_asset_#{f.object.new_record? ? child_index : f.object.id} .datetimepicker').datetimepicker({
      dateFormat: 'yy-mm-dd',
      changeMonth: true,
      changeYear: true
    });
    $('.va_collapse').toggle(function () {
      $(this).removeClass('va_close').addClass('va_open');
      $(this).closest('.child_visual_asset, .visual_asset').css({height:"25px", overflow:"hidden"});
    }, function () {
      $(this).removeClass('va_open').addClass('va_close');
      $(this).closest('.child_visual_asset, .visual_asset').css({height:"auto"});
    });


  });
  $(document).ready(function(){
    $('.visual_asset_type').trigger('change');
  });