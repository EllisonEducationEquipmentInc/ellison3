- child_index = f.object_name.match(/\[([0-9a-f]+)\]$/).try(:[], 1) || f.options[:child_index]
.visual_asset{:id => "visual_asset_#{f.object.id}", :class => "visual_asset_#{child_index}"}
  %h2{:style => "cursor:move"}= f.object.name
  = f.error_messages
  .field
    = f.label :systems_enabled
    - ELLISON_SYSTEMS.each do |sys|
      = hidden_field_tag("#{f.object_name[/^(\w+)/]}[visual_assets_attributes][#{child_index}][systems_enabled][]", sys) if f.object.systems_enabled.try(:include?, sys) && !has_write_permissions?(sys)
      = check_box_tag("#{f.object_name[/^(\w+)/]}[visual_assets_attributes][#{child_index}][systems_enabled][]", sys, f.object.systems_enabled.try(:include?, sys), :disabled => !has_write_permissions?(sys))
      %span{:class => sys == current_system ? "current_system" : nil}= sys
  .field
    = f.label :active
    = f.check_box :active
    = f.label :_destroy, "Destroy this visual asset"
    = f.check_box :_destroy
  .field
    = required_field f.label(:name, "Name/Label")
    %br
    = f.text_field :name, :onchange => "$(this).closest('.visual_asset').children('h2').text(this.value)"
  .field
    = f.label "start_date"
    %br
    = f.text_field "start_date", :class => 'datetimepicker'
  .field
    = f.label "end_date"
    %br
    = f.text_field "end_date", :class => 'datetimepicker'
  .field
    = f.label :recurring
    = f.check_box :recurring, :onclick => "if (this.checked) {$('.visual_asset_#{child_index} .recurring').show()} else {$('.visual_asset_#{child_index} .recurring').hide()}"
  .field.recurring{:style => "display:#{f.object.recurring ? 'block' : 'none'}"}
    - Date::DAYNAMES.each do |day|
      = f.check_box :"#{day.downcase}"
      = day
  .field
    = f.label :short_desc
    %br
    = f.text_field :short_desc
  .field
    = f.label :asset_type
    %br
    = f.select :asset_type, VisualAsset::ASSET_TYPES, {}, :onchange => "toggle_visual_asset_type('#{child_index}')"
  .field.type_specific.catalog_search
    = f.label :search_query, "Complete search query after #. ex: outlet=1&page=1&ideas=0&facets=category~shape-cutting&sort=start_date_szus%3Adesc"
    %br
    = f.text_field :search_query, :size => 100
  .field.type_specific.catalog_search
    = f.label :item_limit
    %br
    = f.text_field :item_limit
  .field.type_specific.freeform.text.billboard
    = f.label :content
    %br
    = f.text_area :content, :class => 'wymeditor'
  .field.type_specific.image.billboard
    = required_field(f.label :image)
    = image_tag(f.object.image_url) if f.object.image? 
    = f.file_field :image
    = f.hidden_field :image_cache
    %br
    = f.label :remove_image
    = f.check_box :remove_image
  .field.type_specific.image.billboard
    = f.label :wide
    = f.check_box :wide
  .field.type_specific.image.billboard
    = f.label :link
    %br
    = f.text_field :link
  .field.type_specific.gallery
    = f.label :images, :gallery_images
    %ul.gallery_images
      - if f.object.images.present?
        - f.object.images.each do |i|
          %li= text_field_tag "#{f.object_name[/^(\w+)/]}[visual_assets_attributes][#{child_index}][images][]", i, :id => nil
    = link_to_function "add image field", %Q($(this).siblings('ul').append('<li><input name="#{f.object_name[/^(\w+)/]}[visual_assets_attributes][#{child_index}][images][]" type="text"></li>'))
  = products_helper_tag "#{f.object_name[/^(\w+)/]}[visual_assets_attributes][#{child_index}][product_item_nums]", f.object.product_item_nums, :label => "Products (item nums only)", :class => "type_specific products"
  = ideas_helper_tag "#{f.object_name[/^(\w+)/]}[visual_assets_attributes][#{child_index}][idea_idea_nums]", f.object.idea_idea_nums, :label => "Ideas (idea nums only)", :class => "type_specific ideas"
:javascript
  $(function (){  
      $(".wymeditor:visible").wymeditor();
      $('.visual_asset_#{child_index} .datetimepicker').datetimepicker({
            dateFormat: 'yy-mm-dd',
            changeMonth: true,
            changeYear: true
          });
      toggle_visual_asset_type('#{child_index}');
      $('.visual_asset_#{child_index} .gallery_images').sortable()
  });
  