= form_for([:admin, @tag], :html => {:multipart => true}) do |f|
  = f.error_messages
  .field
    = f.label :systems_enabled
    = system_enabled('tag')
  .field
    = f.label :active
    %br
    = f.check_box :active
  .field
    = f.label :tag_type
    = f.select :tag_type, Tag.all_types.map {|t| [t.humanize, t]}, {}, :onchange => "toggle_tag_type_fields()"
  #new_campaign{:style => "display:#{@tag.campaign? ? 'block' : 'none'}"}
    .field
      = f.label :embed_campaign, "Embed/update campaign"
      = f.check_box :embed_campaign
      (if checked, discount will be batch applied to associated products. If not checked, this "campaign" will have no effect on product pricing whatsoever)
    = f.fields_for :campaign, @tag.campaign do |campaign_fields|
      .field
        = campaign_fields.label :individual, "Individual Pricing (each product has individual discount)"
        = campaign_fields.check_box :individual, :onclick => "update_campaign()"
      .field.individual
        %ul#individual
          = campaign_fields.fields_for :individual_discounts do |individual_discount_fields|
            = render :partial => 'admin/individual_discounts/individual_discount', :locals => {:f => individual_discount_fields}
          = link_to_add_fields "Add Product", campaign_fields, :individual_discounts
          :javascript
            function add_individual_discount(){
              #{add_fields_function('individual', campaign_fields, :individual_discounts)}
            };
      .field.discount
        = campaign_fields.label :discount_type
        = campaign_fields.select :discount_type, Campaign::DISCOUNT_TYPES
      .field.discount
        = campaign_fields.label :discount
        = campaign_fields.text_field :discount
  .field
    = f.label :name
    %br
    = f.text_field :name
  .field
    = f.label "start_date_#{current_system}", "Start Date #{current_system.upcase}", :class => 'overrideable'
    %br
    = f.text_field "start_date_#{current_system}", :class => 'datetimepicker'
  .field
    = f.label "end_date_#{current_system}", "End Date #{current_system.upcase}", :class => 'overrideable'
    %br
    = f.text_field "end_date_#{current_system}", :class => 'datetimepicker'
  .field
    = f.label :description
    %br
    = f.text_area :description
  .field.calendar_event
    = f.label "calendar_start_date_#{current_system}", "Calendar Start Date #{current_system.upcase}", :class => 'overrideable'
    %br
    = f.text_field "calendar_start_date_#{current_system}", :class => 'datetimepicker'
  .field.calendar_event
    = f.label "calendar_end_date_#{current_system}", "Calendar End Date #{current_system.upcase}", :class => 'overrideable'
    %br
    = f.text_field "calendar_end_date_#{current_system}", :class => 'datetimepicker'
  .field.calendar_event
    = f.label :all_day
    %br
    = f.check_box :all_day
  .field
    = f.label :image, "List page image"
    = image_tag(@tag.image_url(:small)) if @tag.image? 
    = f.file_field :image
    = f.hidden_field :image_cache
    %br
    = f.label :remove_image
    = f.check_box :remove_image
  %h3 Products
  %ul#tag_products= render :partial => 'product', :collection => @tag.products
  = text_field_tag "tag_products_helper"
  %br
  %br
  %h3 Ideas
  %ul#tag_ideas= render :partial => 'idea', :collection => @tag.ideas
  = text_field_tag "tag_ideas_helper"
  %br
  %br
  #visual_assets  
    = f.fields_for :visual_assets, @tag.visual_assets.ordered do |visual_asset_fields|
      = render 'admin/visual_assets/visual_asset', :f => visual_asset_fields
    = link_to_add_fields "Add Visual Asset", f, :visual_assets
  %br
  %br
  .actions
    = f.submit :class => 'wymupdate jqui_save'
:javascript
  function update_campaign(){
    if ($('#tag_campaign_individual').attr('checked')) {$('.discount').hide();$('.individual').show();} else {$('.discount').show();$('.individual').hide()}
  };
  $('#visual_assets').sortable({tolerance: 'pointer', start: function(event, ui) {$('.visual_asset').css({height:"22px",overflow:"hidden"})}, stop: function(event, ui) {$('.visual_asset').css({height:"auto"})}, update: function(event, ui) {
    $.ajax({url:"/admin/tags/reorder_visual_assets?id=#{@tag.id}&"+$("#visual_assets").sortable('serialize')});
  }})
  $("#tag_products_helper").autocomplete({
  	source: function(request, response) {
  		$.getJSON("/admin/products/products_autocomplete", {
  			term: request.term
  		}, response);
  	},
  	search: function() {
  		if (this.value.length < 2) {
  			return false;
  		}
  	},
  	focus: function( event, ui ) {
    				$( "#tag_products_helper" ).val( ui.item.label );
    				return false;
    			},
  	select: function(event, ui) {
  	  this.value = '';
  	  $("#tag_products").append("<li class='ui-menu-item'><a href='#' onclick='$(this).parent().remove();return false;'>x</a> "+ui.item.label+"<input name=\"tag[my_product_ids][]\" type=\"hidden\" value=\""+ui.item.id+"\" /></li>");
  		return false;
  	}});
  $("#tag_ideas_helper").autocomplete({
  	source: function(request, response) {
  		$.getJSON("/admin/ideas/ideas_autocomplete", {
  			term: request.term
  		}, response);
  	},
  	search: function() {
  		if (this.value.length < 2) {
  			return false;
  		}
  	},
  	focus: function( event, ui ) {
    				$( "#tag_ideas_helper" ).val( ui.item.label );
    				return false;
    			},
  	select: function(event, ui) {
  	  this.value = '';
  	  $("#tag_ideas").append("<li class='ui-menu-item'><a href='#' onclick='$(this).parent().remove();return false;'>x</a> "+ui.item.label+"<input name=\"tag[my_idea_ids][]\" type=\"hidden\" value=\""+ui.item.id+"\" /></li>");
  		return false;
  	}});
  
  update_campaign();
  toggle_tag_type_fields();
  
  function toggle_tag_type_fields(){
    if ($('#tag_tag_type').val() == 'special') {$('#new_campaign').show();$('#tag_embed_campaign').attr('checked', true)} else {$('#new_campaign').hide()}
    if ($('#tag_tag_type').val() == 'calendar_event') {$('.calendar_event').show();} else {$('.calendar_event').hide()}
  }